The 2-matrix_divided Module
=======================

Module to import to use ``matrix_divided``

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Usage:

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> print(matrix_divided([[2.0, 4.0], [6.0, 8.0], [10.0, 12.0]], 0.5))
    [[4.0, 8.0], [12.0, 16.0], [20.0, 24.0]]

    >>> print(matrix_divided([[4, 4], [2, 2]], 2))
    [[2.0, 2.0], [1.0, 1.0]]

    >>> print(matrix_divided([[1, 2, 3]], 3))
    [[0.33, 0.67, 1.0]]

    >>> print(matrix_divided([[4]], 2))
    [[2.0]]

    >>> print(matrix_divided([[1]], 3))
    [[0.33]]

    >>> print(matrix_divided([[1], [2], [3]], 3))
    [[0.33], [0.67], [1.0]]

    >>> print(matrix_divided([[4, 2], [4, 2]], 2))
    [[2.0, 1.0], [2.0, 1.0]]

    >>> print(matrix_divided([[4, 2], [4, 2]], 1.5))
    [[2.67, 1.33], [2.67, 1.33]]

    >>> matrix = [
    ...     [10, 20, 30],
    ...     [40, 50, 60]
    ... ]
    >>> print(matrix_divided(matrix, 2))
    [[5.0, 10.0, 15.0], [20.0, 25.0, 30.0]]

    >>> matrix = [
    ... [-80, -101, 12],
    ... [42, 21, 3]
    ... ]
    >>> print(matrix_divided(matrix, 2))
    [[-40.0, -50.5, 6.0], [21.0, 10.5, 1.5]]

    >>> matrix = [[0, 0], [0, 0]]
    >>> print(matrix_divided(matrix, 2))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix = ([[4, 4], [4, 4]])
    >>> print(matrix_divided(matrix, 3.14))
    [[1.27, 1.27], [1.27, 1.27]]

    >>> matrix = [[126], [86], [63]]
    >>> print(matrix_divided(matrix, 3))
    [[42.0], [28.67], [21.0]]

Incorrect Usage:

    >>> print(matrix_divided("not_a_matrix", 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2], [4, 5, 6]], 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix = [[1], [1, 2]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> print(matrix_divided([1], 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], "invalid"))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], None))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, "word", 3], [4, 5, 6]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, " ", 3], [4, 5, 6]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = ([[4, 4], [4, 4]])
    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix = [[1, 2], [1, ]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix = [1, 2, 3]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [None]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided())
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix = []
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2], [3, 4]], 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> print(matrix_divided([[1, 2, "pantoufle"], [4, 5, 6]], 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2], [4, 5, "test"]], 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided(None, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([], 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[None]], 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[None], [None]], 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[42, 1337], [21, 3.14]]
    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]]))
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> print(matrix_divided([[1, 2, 3], [4, 5, "test"]], 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, "word1", 3], ["truc2", 5, 6]], 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, "bidule", 3], [4, 5]], 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
